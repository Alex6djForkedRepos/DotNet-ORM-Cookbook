{
  "docs": [
    {
      "location": "SingleModelCrud.htm",
      "breadcrumbs": "Home / Single Model CRUD",
      "keywords": "1 30 a A Action actually Ado ADO adornment alert All amount an and annotations applies are as aspx associate attribute attributes base Based basic be before below better block boilerplate Build but call called calls can cannot case cases Chain class code Code column Column complex configuration ConfigureSessionFactory context convenient core Core could covers create Create CRUD cs csharp Dapper database DbContext DbSet delete Delete Depending design does doesn done each EDMX ef efcore eliminates Embedded EmployeeClassification EmployeeClassificationKey EmployeeClassificationName EmployeeClassifications end Entity EntityFrameworkCore entityframeworktutorial error essentially every example existing extra extraneous far file files Finally first First Flush for For Framework from further general generate generated get has have hbm heavily helper Here Hibernate how However HR https implementations implicitly Improved in In includes info information Instead int interesting interfaces internally invoke is ISingleModelCrudRepository it its itself Java just key Key keys leaving less literally ll long mapping Mappings match mean means metadata methods minimal model Model models Models modifications more name names need needed needs net NET NHibernate no normally not of often oldest on one operation operations or OrmCookbook ORMs other Other overridden partial participate per performing primary property Prototype public Rather raw read Read really Recipes reduce refers relies RepoDb repository Repository represents requires resemebles resource revised row rule rules runtime s same see SessionFactory set setup Setup shown single Single SingleModelCrud SingleModelCrudRepository SingleModelCrudRepository2 snippet so some speaking specific specified SQL standard stitch Strictly string StringLength strings style such t table Table tag TEmployeeClassification that the The there There These they this This to To together tooling Tortuga update Update use used using various version virtual was what when which will with With Without written www xml XML you",
      "title": "Single Model CRUD"
    },
    {
      "location": "SingleModelCrudAsync.htm",
      "breadcrumbs": "Home / Async Operations",
      "keywords": "1 a add adds Ado ADO and another any appropriate are arrays As async Async at attempt await be becomes between but But can cancel cancellable cancellation case cases Chain changes CommandDefinition completing condition ConfigureAwait Core create CRUD cs Dapper database does done Entity EntityFrameworkCore example exceptions explicitly false for For Framework full future general GetByKey GetByKeyAsync handled Here htm if If in including is ISingleModelCrudAsyncRepository it loading may Model must need NET NHibernate non not object of only open operation operations or Original Otherwise parameter parameters places Prototype provided query race read reason Recipes record records RepoDb repository Repository required rule safely set Single SingleModelCrud SingleModelCrudAsync SingleModelCrudAsyncRepository SingleModelCrudRepository snippet support TEmployeeClassification that the The then There they think this This time to token tokens Tortuga transactions try use user users which will wish with With wrap write you your",
      "title": "Async Operations"
    },
    {
      "location": "TryCrud.htm",
      "breadcrumbs": "Home / TryGet/Update/Delete Operations",
      "keywords": "1 a Ado ADO an and as back between cases catch Chain command Core counts cs Dapper Delete demonstrate difference Entity EntityFrameworkCore exception Execute ExecuteNonQuery fail Framework from In is ITryCrudRepository Like methods need NET NHibernate no operations Operations or Prototype read Recipes RepoDb Repository returned row silently snippet some StaleStateException TEmployeeClassification that the The there These this to TODO Tortuga trick TryCrud TryCrudRepository TryDelete TryGet TryUpdate Update use uses with you",
      "title": "TryGet/Update/Delete Operations"
    },
    {
      "location": "PartialUpdate.htm",
      "breadcrumbs": "Home / Partial Updates",
      "keywords": "1 a Ado ADO and cases Chain Core cs Dapper demonstrate Entity EntityFrameworkCore fetch first Framework how IPartialUpdateRepository it modify NET NHibernate on partial Partial PartialUpdate PartialUpdateRepository perform Prototype Recipes record RepoDb Repository row snippet TEmployeeClassification then These to To TODO Tortuga update Update updates Updates use",
      "title": "Partial Updates"
    }
  ]
}