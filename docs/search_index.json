{
  "docs": [
    {
      "location": "SingleModelCrud.htm",
      "breadcrumbs": "Home / Single Model CRUD",
      "keywords": "1 30 a actually Ado ADO adornment alert All amount an and annotations applies are as aspx attribute base basic be before below better boilerplate call calls can case Chain class code Code column context convenient core Core could covers create CRUD cs csharp Dapper database DbContext DbSet delete Depending design does doesn done EDMX ef efcore eliminates EmployeeClassification EmployeeClassificationKey EmployeeClassificationName EmployeeClassifications end Entity EntityFrameworkCore entityframeworktutorial essentially every example existing extra extraneous files Finally first First for For Framework from further generate generated get has have helper Here how However HR https implementations Improved in info information int internally is ISingleModelCrudRepository it itself just key Key literally long match mean means methods minimal model Model models more name names needs net NET no normally not of on one operation operations or OrmCookbook ORMs other overridden partial participate performing primary property Prototype public Rather raw really Recipes reduce refers repository Repository represents requires revised row s same see set setup shown single Single SingleModelCrud SingleModelCrudRepository SingleModelCrudRepository2 snippet so some speaking specified SQL Strictly string StringLength strings style such t table Table tag TEmployeeClassification that the The there they This to To tooling Tortuga update use using version virtual was what when which will with With Without written www XML you",
      "title": "Single Model CRUD"
    },
    {
      "location": "SingleModelCrudAsync.htm",
      "breadcrumbs": "Home / Async Operations",
      "keywords": "1 a add adds Ado ADO and another any appropriate are arrays As async Async attempt await be becomes between but But can cancel cancellable cancellation case cases Chain changes CommandDefinition completing condition ConfigureAwait Core create CRUD cs Dapper database done Entity EntityFrameworkCore example exceptions explicitly false for For Framework full future general GetByKey GetByKeyAsync handled Here htm if If in including is ISingleModelCrudAsyncRepository it loading may Model must need NET non not object of only open operation operations or Original Otherwise parameter parameters places Prototype provided query race read reason Recipes record records repository Repository required rule safely set Single SingleModelCrud SingleModelCrudAsync SingleModelCrudAsyncRepository SingleModelCrudRepository snippet support TEmployeeClassification that the The then There they think this This to token tokens Tortuga transactions try use user users which will wish with With wrap write you your",
      "title": "Async Operations"
    }
  ]
}